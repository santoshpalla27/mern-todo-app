version: '3.8'
services:
  frontend:
    image: nginx:alpine
    ports:
      - "80:80"  # Expose port 80 for the frontend
    volumes:
      - ./frontend:/usr/share/nginx/html:ro  # Serve static files
    networks:
      - app-network  # Attach to custom network
    depends_on:
      - backend  # Ensure backend is up before frontend starts

  backend:
    build: ./backend
    ports:
      - "5000:5000"  # Expose port 5000 for the backend API
    environment:
      FLASK_APP: app.py
      FLASK_RUN_HOST: 0.0.0.0
      FLASK_RUN_PORT: 5000
      DATABASE_HOST: database  # Use service name 'database' for DB connection
      DATABASE_USER: root
      DATABASE_PASSWORD: rootpassword
      DATABASE_NAME: myapp
    networks:
      - app-network  # Attach to custom network
    depends_on:
      - database  # Ensure database is up before backend starts

  database:
    image: mysql:5.7
    ports:
      - "3306:3306"  # Expose port 3306 for the MySQL DB
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: myapp
    volumes:
      - db_data:/var/lib/mysql  # Persist DB data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro  # Initialize DB
    networks:
      - app-network  # Attach to custom network

volumes:
  db_data:  # Volume to persist MySQL data

networks:
  app-network:  # Custom bridge network for internal communication between services
    driver: bridge
